from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from datetime import datetime

# üß≠ Menus et claviers communs
MENU_KEYBOARD = [
    ["Prise de poste", "Fin de poste"],
    ["Checklist", "Anomalie"]
]
MENU_MARKUP = ReplyKeyboardMarkup(MENU_KEYBOARD, resize_keyboard=True)

YES_NO_KEYBOARD = [["Oui", "Non"]]
YES_NO_MARKUP = ReplyKeyboardMarkup(YES_NO_KEYBOARD, resize_keyboard=True)

AI_ASSISTANT_KEYBOARD = [["üí¨ Aide IA", "Retour au menu"]]
AI_ASSISTANT_MARKUP = ReplyKeyboardMarkup(AI_ASSISTANT_KEYBOARD, resize_keyboard=True)

# üìå Constantes m√©tier partag√©es
PHOTO_LABELS = [
    "Vue d‚Äôensemble",
    "N¬∞ machine",
    "Pression hydraulique",
    "Attelage",
    "Outillage mont√©",
]

CHECKLIST_QUESTIONS = [
    "Niveau d‚Äôhuile v√©rifi√© ?",
    "Pneus ou chenilles en bon √©tat ?",
    "Feux et avertisseurs OK ?",
    "Document de bord pr√©sent ?",
]

ANOMALIES_HYDRAULIQUE = [
    "Fuite v√©rin",
    "Flexible ab√Æm√©",
    "Mauvaise pression",
    "Mouvement lent ou absent",
]

MACHINES_DISPO = [
    "CAT M323F",
    "Atlas 1604",
    "Mecalac 8MCR",
    "Rail-Route UNAC",
]

# üßº Helpers utilitaires

def format_date():
    return datetime.now().strftime("%d/%m/%Y")

def format_heure():
    return datetime.now().strftime("%H:%M")

def validate_yes_no(text: str) -> bool:
    return text.lower() in ["oui", "non"]

def is_valid_photo_label(label: str) -> bool:
    return label in PHOTO_LABELS

# üß† Helpers IA (exemple)
def build_ai_prompt(question: str, context: dict = None) -> str:
    prompt = f"R√©ponds en tant qu‚Äôassistant de s√©curit√© ferroviaire :\n\nQuestion : {question}"
    if context:
        prompt += f"\n\nContexte : {context}"
    return prompt 